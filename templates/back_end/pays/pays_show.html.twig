{% extends "back_end/base.html.twig" %}

{% block contenu %}

    <div class="row">
        <h5 class=" m-auto col-8"><i class="fa fa-flag"></i>  Liste des pays génériques   </h5>
        <div class="col-3 float-right">
            <a href="{{path('add_pays')}}" class="btn btn-primary petite-taille"><i class="fas fa-plus-circle"></i> Nouveau pays</a>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <table data-toggle="table" data-url="{{ path('json_pays')}}" data-pagination="true" data-search="true" data-pagination: "true">
                <thead>
                    <tr>
                        <th data-sortable="true" data-field="iso">Code</th>
                        <th data-field="titre" >Titre</th>
                        <th data-field="zoneGeographique.titre" >Zone</th>
                        <th data-field="valide" data-formatter="booleanFormatter" data-align="center" data-sortable="true">Actif</th>
                        <th data-field="edit" data-formatter="actionsFormatter">Editer</th>
                    </tr>
                </thead>
            </table>
        </div> 
    </div>

{% endblock %}

{% block javascripts %}

    {{ parent() }}
    <script>

        function actionsFormatter(value, row, index){
            return '<a href="'+Routing.generate('edit_pays', {'id' : row.id})+'" title="Modifier"><i class="far fa-edit"></i></a>';
        }

        function booleanFormatter(value, row, index) {
            if (value === true) {
                return '<i class="fa fa-check text-success text-center"></i>';
            }
            else {
                return '<i class="fa fa-times text-danger text-center"></i>';
            }
        }

        // function listePaysFormatter(value, row, index){
        //     if (row["zoneGeographique"].length > 0){
        //         var listeZone = [];
        //         $.each(row["zoneGeographique"], function(idx, elt){
        //             txt = "<span class='kt-badge kt-badge--info kt-badge--lg kt-badge--inline kt-badge--pill kt-badge--rounded'>" +
        //                 elt["titre"] + "</span>";
        //             listeZone.push(txt);
        //         });
        //         return listeZone.join(" ");
        //     }
        //     return "<span class='kt-badge kt-badge--lg kt-badge--warning kt-badge--inline kt-badge--pill kt-badge--rounded'>Aucune Zone paramétré</span>";
        // }

        // function dateFormatter(value, row, index) {
        //     var date = new Date(value*1000);
        //     return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;
        // }

    </script>
    
{% endblock %}